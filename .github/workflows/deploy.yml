name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: archlinux:latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm rustup nodejs npm jq curl git tar gzip

      - name: Setup Rust
        run: |
          rustup install stable
          rustup default stable

      - name: Download and setup mdBook
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/rust-lang/mdBook/releases/latest | jq -r ".tag_name")
          curl -LO "https://github.com/rust-lang/mdBook/releases/download/${LATEST_RELEASE}/mdbook-${LATEST_RELEASE}-x86_64-unknown-linux-gnu.tar.gz"
          tar xzf mdbook-${LATEST_RELEASE}-x86_64-unknown-linux-gnu.tar.gz -C /usr/local/bin

      - name: Build mdBook
        run: |
          mdbook build docs

      - name: Setup Node.js
        run: |
          LATEST_NODE=$(curl -s https://api.github.com/repos/nodejs/node/releases/latest | jq -r ".tag_name")
          curl -LO "https://nodejs.org/dist/${LATEST_NODE}/node-${LATEST_NODE}-linux-x64.tar.gz"
          tar xzf node-${LATEST_NODE}-linux-x64.tar.gz
          export PATH=$PATH:$(pwd)/node-${LATEST_NODE}-linux-x64/bin

      - name: Install and build Astro project
        run: |
          npm install
          npm run build

      - name: Move mdBook to Astro docs folder
        run: |
          mkdir -p dist/docs
          mv docs/book/* dist/docs/

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: website
          path: dist/

  deploy:
      needs: build
      runs-on: ubuntu-latest
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Download artifacts
          uses: actions/download-artifact@v2
          with:
            name: website
            path: dist/

        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v1
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            target-branch: 'gh-pages'
            keep-history: true
            path: dist/
